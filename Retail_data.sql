create database Retail_data
--------------------------------------------------------------

----Count of each rows in all the three tables:
select (
	select count(*)
	from Customer
	) as countCus,
	(
	select count(*) 
	from Transactions
	) as countTran,
	(
	select count(*)
	from prod_cat_info
	) as countProd


--------------------------------------------------------------
----Count of those transactions which were returned:

select count(*) return_count from Transactions 
where qty<0

----------------------------------------------------------------

---Conversion of date in valid date formats:

update Transactions
set tran_date= convert(nvarchar,tran_date,103)
select* from Transactions
--------------------------------------------------------------
---Time range of the data 

select  datediff(year,min(tran_date),max(tran_date)) as year,
datediff(month, min(tran_date), max(tran_Date)) as [month],
datediff(day,min(tran_date),max(tran_Date))as days
from Transactions
----------------------------------------------------------------
----- DIY belongs to:

select prod_cat from prod_cat_info
where prod_subcat='DIY'

-----------------------------------------------------------------

-----Channel used most frequently:

select top(1) Store_type from Transactions
group by Store_type 
Order by count(store_type)desc
-------------------------------------------------------------------
----Count of male and female customers:

select gender, count(gender) as [count]
from Customer
where gender <> '' 
group by Gender

--------------------------------------------------------------------
----City with max. no. of customers:

select top(1) c.city_code, count   (c.city_code) as [count] from Customer c
left join Transactions t
on c.cust_id=t.cust_id
group by c.city_code
order by count(c.city_code) desc

-------------------------------------------------------------------------
----Sub-category under books category:

 select count(prod_subcat) subcat_count from prod_cat_info
 where prod_cat='books'

 -------------------------------------------------------------------------
-----Max. quantity of products ordered:

select top(1) sum(cast(qty as int)) as total from Transactions
group by tran_date
order by sum(cast(qty as int))  desc

---------------------------------------------------------------------------
-----Net total revenue generated by Electronics and Books

select p.prod_cat, round(sum(cast(t.total_amt as float)),2)as [Net AMt] from Transactions t
inner join prod_cat_info p
on t.prod_cat_code= p.prod_cat_code
where p.prod_cat= 'Electronics'  or p.prod_cat='books'
group by prod_cat

-----------------------------------------------------------------------------
-----Customers with >10 transactions

select cust_id from Transactions
where not qty<0
group by cust_id
having count(cast(cust_id as int))>10

-----------------------------------------------------------------------------
------Combined revenue earned by "electronics" and "clothing" from "flagship stores"

select round(sum(cast(total_amt as float)),2) [total_revenue] from Transactions t
inner join prod_cat_info p
on t.prod_cat_code= p.prod_cat_code
where prod_cat in ('Clothing','Electronics') and Store_type='flagship store'

------------------------------------------------------------------------------------
----- total revenue by male customers, prod_sub_cat wise

select p.prod_subcat, round(sum(cast(total_amt as float)),2) total  from Customer c
inner join Transactions t
on c.cust_Id= t.cust_id
inner join prod_cat_info p
on t.prod_cat_code=p.prod_cat_code
where prod_cat= 'electronics' and Gender ='M'
group by p.prod_subcat

--------------------------------------------------------------------------------------------
----percentage of sales and returns of prod_sub_Cat
-----total Qty(including returns and sales)- 56074
----Return
select p.prod_subcat, (((sum(cast(qty as int)*100))/56074)*-1) total_return from Transactions t
inner join prod_cat_info p
on t.prod_cat_code=p.prod_cat_code
where qty<0
group by prod_subcat

----Sales
select top(5) p.prod_subcat, (sum(cast(qty as int))*100)/56074 total_sales from Transactions t
inner join prod_cat_info p
on t.prod_cat_code=p.prod_cat_code
where qty>0
group by prod_subcat

-------------------------------------------------------------------------
-----Nettotal revenue generated by customers aged between 25 and 35

update Customer
set DOB= convert(date, DOB, 103)

select sum(cast(t.total_amt as float)) as net_total_revenue from  Customer c
full join Transactions t
on c.cust_Id= t.cust_id
where datediff(Year,c.DOB,t.tran_date) >25 and datediff(Year,c.DOB,t.tran_date)<35 
and datediff(day,t.tran_date,(select max(tran_date) from Transactions))<30


--------------------------------------------------------------------------------------
--------product_category with max. returns

select max(t.qty) as max_return, p.prod_cat from Transactions t
inner join prod_cat_info p
on t.prod_cat_code= p.prod_cat_code
where t.Qty<0 and datediff(day,t.tran_date,(select max(tran_date) from Transactions))<90
group by p.prod_cat

---------------------------------------------------------------------------------------
-------store_type sells max products

-----by quantity sold
select top(1)Qty, Store_type 
 from Transactions
 where qty>0

 ----by value of sales amt
 select top(1) total_amt, Store_type from Transactions
 where cast(total_amt as float)>0

 ---------------------------------------------------------------------------------------
 ------categories which are above total revenue

 select p.prod_cat from Transactions t
 inner join prod_cat_info p
 on t.prod_cat_code=p.prod_cat_code
 group by p.prod_cat
 having(round(avg(cast(total_amt as float)),2)>(select avg(cast (total_amt as float))from Transactions))

 ---------------------------------------------------------------------------------------------
-------- avg and total revenue by sub-category

 select top(5)t.Qty,p.prod_cat,(round( avg(cast(t.total_amt as float)),2)) average_revenue,
 round(sum(cast(t.total_amt as float)),2) total_revenue, p.prod_subcat from Transactions t
 full join prod_cat_info p
 on t.prod_cat_code=p.prod_cat_code
 where t.Qty>0
 group by p.prod_subcat, p.prod_cat,t.Qty
 order by t.Qty desc

 ----------------------------------------------------------------------------------------------

 
 










